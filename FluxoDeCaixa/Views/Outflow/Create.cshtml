@using System.Text.Json
@using Microsoft.AspNetCore.Http
@inject IHttpContextAccessor HttpContextAccessor

@model FluxoDeCaixa.Models.ViewModels.OutflowFormViewModel

@{ ViewData["Title"] = "Novo Saque"; }


<h1 class="d-flex justify-content-between">
    @ViewData["Title"]

</h1>



<hr />
<div class="row">
    <div class="col-md-4">
        <form id="form" asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Outflow.Id" class="control-label" hidden></label>
                <input asp-for="Outflow.Id" class="form-control" hidden />
            </div>
            <div class="form-group">
                <label asp-for="Outflow.OutflowDate" class="control-label"></label>
                <input asp-for="Outflow.OutflowDate" class="form-control" />
                <span asp-validation-for="Outflow.OutflowDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Outflow.OutflowDescription" class="control-label"></label>
                <input asp-for="Outflow.OutflowDescription" class="form-control" />
                <span asp-validation-for="Outflow.OutflowDescription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Outflow.OutflowAmount" class="control-label"></label>
                <input value="0" asp-for="Outflow.OutflowAmount" class="form-control" />
                <span asp-validation-for="Outflow.OutflowAmount" class="text-danger"></span>
            </div>
            @{ var person = JsonSerializer.Deserialize<Person>(HttpContextAccessor.HttpContext.Session.GetString("User"));
                if (person.Id == 1)
                {

    <div class="form-group">
        <label>Pessoa</label>
        <select id="select" asp-for="Outflow.Person.Id" class="form-control">
            @foreach (var obj in Model.People)
            {
<option value="@obj.Id" class="form-control">@obj.Name</option>
}
        </select>
    </div> }
else
{
<div class="form-group">

    <select id="select" asp-for="Outflow.Person.Id" class="form-control" hidden>

        <option value="@person.Id" class="form-control">@person.Name</option>
    </select>
</div> } }



            <div class="d-flex">
                <div class="m-1">
                    <a class="btn btn-outline-primary " asp-action="Index"> Voltar</a>
                </div>
                <div class="form-group m-1">
                    <input type="submit" value="Adicionar" class="btn btn-success" />
                </div>

            </div>
        </form>
    </div>
</div>

@{ if (ViewBag.msg != null && ViewBag.msg != "")
                {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" charset="UTF-8"></script>
                    <script>
            Swal.fire({
                title: '@ViewBag.msg',
                text: '@ViewBag.text',
                icon: 'error',
                confirmButtonText: 'Ok',
                confirmButtonColor: '#3B71CA',

            })

                    </script> }

                                if (ViewBag.msgMin != null && ViewBag.msgMin != "")
                                {
                    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" charset="UTF-8"></script>
                                    <script>
            Swal.fire({
                title: '@ViewBag.msgMin',
                
                icon: 'warning',
                confirmButtonText: 'Ok',
                confirmButtonColor: '#3B71CA',

            }).then((result) => {
                window.location.href = '/Outflow/Index';
            })
                                    </script> } }

@*<script>

        function Teste() {
            debugger;
            if (@Model.Outflow?.Person?.Balance - @Model.Outflow?.OutflowAmount < @Model.Outflow?.Person?.MinimumValue) {
                alert('aaaaaaaaaa');
            }

            document.getElementById('form').onsubmit(
                {

                }
        }
    </script>*@